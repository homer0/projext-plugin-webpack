{
  "type": "File",
  "start": 0,
  "end": 8219,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 260,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 8219,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 260,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Jimple}\n * https://yarnpkg.com/en/package/jimple\n ",
        "start": 0,
        "end": 70,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Jimpex}\n * https://yarnpkg.com/en/package/jimpex\n ",
        "start": 72,
        "end": 142,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Express}\n * https://expressjs.com\n ",
        "start": 144,
        "end": 199,
        "loc": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {FileSystem}\n * https://nodejs.org/api/fs.html\n ",
        "start": 201,
        "end": 268,
        "loc": {
          "start": {
            "line": 16,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
        "start": 270,
        "end": 385,
        "loc": {
          "start": {
            "line": 21,
            "column": 0
          },
          "end": {
            "line": 24,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
        "start": 387,
        "end": 493,
        "loc": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
        "start": 495,
        "end": 631,
        "loc": {
          "start": {
            "line": 31,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
        "start": 633,
        "end": 757,
        "loc": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
        "start": 759,
        "end": 877,
        "loc": {
          "start": {
            "line": 41,
            "column": 0
          },
          "end": {
            "line": 44,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Projext}\n * https://homer0.github.io/projext/class/src/app/index.js~Projext.html\n ",
        "start": 879,
        "end": 981,
        "loc": {
          "start": {
            "line": 46,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {BuildVersion}\n * https://homer0.github.io/projext/class/src/services/building/buildVersion.js~BuildVersion.html\n ",
        "start": 983,
        "end": 1116,
        "loc": {
          "start": {
            "line": 51,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Events}\n * https://homer0.github.io/projext/class/src/services/common/events.js~Events.html\n ",
        "start": 1118,
        "end": 1231,
        "loc": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 59,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Targets}\n * https://homer0.github.io/projext/class/src/services/targets/targets.js~Targets.html\n ",
        "start": 1233,
        "end": 1350,
        "loc": {
          "start": {
            "line": 61,
            "column": 0
          },
          "end": {
            "line": 64,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {TargetsFileRules}\n * https://homer0.github.io/projext/class/src/services/targets/targetsFileRules/targetsFileRules.js~TargetsFileRules.html\n ",
        "start": 1352,
        "end": 1513,
        "loc": {
          "start": {
            "line": 66,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {TargetFileRules}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetFileRules\n ",
        "start": 1515,
        "end": 1639,
        "loc": {
          "start": {
            "line": 71,
            "column": 0
          },
          "end": {
            "line": 74,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {TargetsHTML}\n * https://homer0.github.io/projext/class/src/services/targets/targetsHTML.js~TargetsHTML.html\n ",
        "start": 1641,
        "end": 1770,
        "loc": {
          "start": {
            "line": 76,
            "column": 0
          },
          "end": {
            "line": 79,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Target}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-Target\n ",
        "start": 1772,
        "end": 1878,
        "loc": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 84,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {TargetConfigurationCreator}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetConfigurationCreator\n ",
        "start": 1880,
        "end": 2026,
        "loc": {
          "start": {
            "line": 86,
            "column": 0
          },
          "end": {
            "line": 89,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ProjectConfigurationSettings}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-ProjectConfigurationSettings\n ",
        "start": 2028,
        "end": 2178,
        "loc": {
          "start": {
            "line": 91,
            "column": 0
          },
          "end": {
            "line": 94,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {BabelConfiguration}\n * https://homer0.github.io/projext/class/src/services/configurations/babelConfiguration.js~BabelConfiguration.html\n ",
        "start": 2180,
        "end": 2337,
        "loc": {
          "start": {
            "line": 96,
            "column": 0
          },
          "end": {
            "line": 99,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {Middleware}\n * http://expressjs.com/en/guide/using-middleware.html\n ",
        "start": 2339,
        "end": 2427,
        "loc": {
          "start": {
            "line": 101,
            "column": 0
          },
          "end": {
            "line": 104,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {ChildProcess}\n * https://nodejs.org/api/child_process.html#child_process_class_childprocess\n * @ignore\n ",
        "start": 2429,
        "end": 2553,
        "loc": {
          "start": {
            "line": 106,
            "column": 0
          },
          "end": {
            "line": 110,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {function} DevMiddlewareGetDirectory\n * @return {string}\n * The build directory of the target implementing the dev middleware.\n ",
        "start": 2555,
        "end": 2701,
        "loc": {
          "start": {
            "line": 112,
            "column": 0
          },
          "end": {
            "line": 116,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {function} DevMiddlewareGetFileSystem\n * @return {Promise<FileSystem,Error>}\n * The reason this is resolved on a promise is to avoid trying to accessing files before they are\n * generated.\n ",
        "start": 2703,
        "end": 2911,
        "loc": {
          "start": {
            "line": 118,
            "column": 0
          },
          "end": {
            "line": 123,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} MiddlewaresInformation\n * @property {Array} middlewares\n * A list of functions that when executed return a Node middleware.\n * @property {DevMiddlewareGetDirectory} getDirectory\n * To access the target implementing the middleware build directory.\n * @property {DevMiddlewareGetFileSystem} getFileSystem\n * To access the webpack dev middleware _\"virtual filesystem\"_.\n ",
        "start": 2913,
        "end": 3308,
        "loc": {
          "start": {
            "line": 125,
            "column": 0
          },
          "end": {
            "line": 133,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} WebpackConfigurationsByEnvironment\n * @property {ConfigurationFile} production\n * The configuration service for a the target type production build.\n * @property {ConfigurationFile} development\n * The configuration service for a the target type development build.\n ",
        "start": 3310,
        "end": 3601,
        "loc": {
          "start": {
            "line": 135,
            "column": 0
          },
          "end": {
            "line": 141,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} WebpackConfigurations\n * @property {WebpackConfigurationsByEnvironment} node\n * The build types configurations for a Node target.\n * @property {WebpackConfigurationsByEnvironment} browser\n * The build types configurations for a browser target.\n ",
        "start": 3603,
        "end": 3875,
        "loc": {
          "start": {
            "line": 143,
            "column": 0
          },
          "end": {
            "line": 149,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} WebpackConfigurationTargetOutput\n * @property {string} js\n * The filename format and path for the bundle, on the distribution directory.\n * @property {string} css\n * The filename format and path for the generated stylesheet, on the distribution directory.\n * @property {string} images\n * The filename format and path for the images that are going to be copied to the distribution\n * directory.\n * @property {string} fonts\n * The filename format and path for the font files that are going to be copied to the distribution\n * directory.\n ",
        "start": 3877,
        "end": 4440,
        "loc": {
          "start": {
            "line": 151,
            "column": 0
          },
          "end": {
            "line": 163,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} WebpackPluginInfo\n * @property {string} name          The name of the plugin.\n * @property {string} configuration The path to the `webpack.config.js` file.\n * @property {Array}  external      The list of subpaths the plugin exposes and that should be\n *                                  handled as external dependencies, in order to avoid bundling\n *                                  them.\n ",
        "start": 4442,
        "end": 4860,
        "loc": {
          "start": {
            "line": 165,
            "column": 0
          },
          "end": {
            "line": 172,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} WebpackConfigurationParams\n * @property {Target} target\n * The target information.\n * @property {TargetFileRules} targetRules\n * The rules to find the different file types a target may use.\n * @property {Object} entry\n * A dictionary with the `entry` setting for a webpack configuration, generated with the target\n * information.\n * @property {WebpackConfigurationTargetOutput} output\n * A dictionary with the filenames formats and paths of the different files the bundle can\n * generate.\n * @property {Object} definitions\n * A dictionary of defined variables that will be replaced on the bundled code.\n * @property {string} buildType\n * The intended built type: `development` or `production`.\n ",
        "start": 4862,
        "end": 5584,
        "loc": {
          "start": {
            "line": 174,
            "column": 0
          },
          "end": {
            "line": 190,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} TargetDevServerSSLSettings\n * @property {string} key\n * The path to the SSL key (`.key`).\n * @property {string} cert\n * The path to the SSL certificate (`.crt`).\n * @property {string} ca\n * The path to the SSL public file (`.pem`).\n ",
        "start": 5586,
        "end": 5846,
        "loc": {
          "start": {
            "line": 192,
            "column": 0
          },
          "end": {
            "line": 200,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} TargetDevServerProxiedSettings\n * @property {boolean} enabled\n * Whether or not the dev server is being proxied.\n * @property {string} host\n * The host used to proxy the dev server.\n * @property {boolean} https\n * Whether or not the proxied host uses `https`.\n ",
        "start": 5848,
        "end": 6136,
        "loc": {
          "start": {
            "line": 202,
            "column": 0
          },
          "end": {
            "line": 210,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} TargetDevServerSettings\n * @property {number} port\n * The server port.\n * @property {string} host\n * The dev server hostname.\n * @property {string} url\n * The complete URL for the dev server.\n * @property {boolean} reload\n * Whether or not to reload the server when the code changes.\n * @property {?TargetDevServerSSLSettings} ssl\n * The paths to the files to enable SSL on the dev server.\n * @property {?TargetDevServerProxiedSettings} [proxied]\n * When the dev server is being proxied (using `nginx` for example), there are certain\n * functionalities, like hot module replacement and live reload, that need to be aware of this.\n ",
        "start": 6138,
        "end": 6796,
        "loc": {
          "start": {
            "line": 212,
            "column": 0
          },
          "end": {
            "line": 227,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {function} ProviderRegisterMethod\n * @param {Jimple} app\n * A reference to the dependency injection container.\n ",
        "start": 6798,
        "end": 6928,
        "loc": {
          "start": {
            "line": 229,
            "column": 0
          },
          "end": {
            "line": 233,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} Provider\n * @property {ProviderRegisterMethod} register\n * The method that gets called when registering the provider.\n ",
        "start": 6930,
        "end": 7076,
        "loc": {
          "start": {
            "line": 235,
            "column": 0
          },
          "end": {
            "line": 239,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ProjextWebpackBundleRunnerOptions\n * @property {?string} entry  The name of the webpack entry to execute. If not specified will\n *                            fallback to the first one on the list provided by webpack.\n * @property {?string} name   The _\"instance name\"_, used to register the listeners on the webpack\n *                            event hooks.\n *                            Its default value is `projext-webpack-plugin-bundle-runner`.\n * @property {?Logger} logger A custom logger to output the plugin's information messages.\n ",
        "start": 7078,
        "end": 7647,
        "loc": {
          "start": {
            "line": 241,
            "column": 0
          },
          "end": {
            "line": 249,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {Object} ProjextWebpackOpenDevServerOptions\n * @property {boolean} openBrowser Whether or not to open the browser when the bundle is ready.\n *                                 Its default value is `true`.\n * @property {?string} name        The _\"instance name\"_, used to register the listeners on the\n *                                 webpack event hooks.\n *                                 Its default value is `projext-webpack-plugin-open-dev-server`.\n * @property {?Logger} logger      A custom logger to output the plugin's information messages.\n ",
        "start": 7649,
        "end": 8218,
        "loc": {
          "start": {
            "line": 251,
            "column": 0
          },
          "end": {
            "line": 259,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Jimple}\n * https://yarnpkg.com/en/package/jimple\n ",
      "start": 0,
      "end": 70,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Jimpex}\n * https://yarnpkg.com/en/package/jimpex\n ",
      "start": 72,
      "end": 142,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Express}\n * https://expressjs.com\n ",
      "start": 144,
      "end": 199,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {FileSystem}\n * https://nodejs.org/api/fs.html\n ",
      "start": 201,
      "end": 268,
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
      "start": 270,
      "end": 385,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
      "start": 387,
      "end": 493,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
      "start": 495,
      "end": 631,
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
      "start": 633,
      "end": 757,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
      "start": 759,
      "end": 877,
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Projext}\n * https://homer0.github.io/projext/class/src/app/index.js~Projext.html\n ",
      "start": 879,
      "end": 981,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {BuildVersion}\n * https://homer0.github.io/projext/class/src/services/building/buildVersion.js~BuildVersion.html\n ",
      "start": 983,
      "end": 1116,
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Events}\n * https://homer0.github.io/projext/class/src/services/common/events.js~Events.html\n ",
      "start": 1118,
      "end": 1231,
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Targets}\n * https://homer0.github.io/projext/class/src/services/targets/targets.js~Targets.html\n ",
      "start": 1233,
      "end": 1350,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetsFileRules}\n * https://homer0.github.io/projext/class/src/services/targets/targetsFileRules/targetsFileRules.js~TargetsFileRules.html\n ",
      "start": 1352,
      "end": 1513,
      "loc": {
        "start": {
          "line": 66,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetFileRules}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetFileRules\n ",
      "start": 1515,
      "end": 1639,
      "loc": {
        "start": {
          "line": 71,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetsHTML}\n * https://homer0.github.io/projext/class/src/services/targets/targetsHTML.js~TargetsHTML.html\n ",
      "start": 1641,
      "end": 1770,
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Target}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-Target\n ",
      "start": 1772,
      "end": 1878,
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 84,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetConfigurationCreator}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetConfigurationCreator\n ",
      "start": 1880,
      "end": 2026,
      "loc": {
        "start": {
          "line": 86,
          "column": 0
        },
        "end": {
          "line": 89,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ProjectConfigurationSettings}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-ProjectConfigurationSettings\n ",
      "start": 2028,
      "end": 2178,
      "loc": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {BabelConfiguration}\n * https://homer0.github.io/projext/class/src/services/configurations/babelConfiguration.js~BabelConfiguration.html\n ",
      "start": 2180,
      "end": 2337,
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Middleware}\n * http://expressjs.com/en/guide/using-middleware.html\n ",
      "start": 2339,
      "end": 2427,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ChildProcess}\n * https://nodejs.org/api/child_process.html#child_process_class_childprocess\n * @ignore\n ",
      "start": 2429,
      "end": 2553,
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 110,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} DevMiddlewareGetDirectory\n * @return {string}\n * The build directory of the target implementing the dev middleware.\n ",
      "start": 2555,
      "end": 2701,
      "loc": {
        "start": {
          "line": 112,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} DevMiddlewareGetFileSystem\n * @return {Promise<FileSystem,Error>}\n * The reason this is resolved on a promise is to avoid trying to accessing files before they are\n * generated.\n ",
      "start": 2703,
      "end": 2911,
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} MiddlewaresInformation\n * @property {Array} middlewares\n * A list of functions that when executed return a Node middleware.\n * @property {DevMiddlewareGetDirectory} getDirectory\n * To access the target implementing the middleware build directory.\n * @property {DevMiddlewareGetFileSystem} getFileSystem\n * To access the webpack dev middleware _\"virtual filesystem\"_.\n ",
      "start": 2913,
      "end": 3308,
      "loc": {
        "start": {
          "line": 125,
          "column": 0
        },
        "end": {
          "line": 133,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationsByEnvironment\n * @property {ConfigurationFile} production\n * The configuration service for a the target type production build.\n * @property {ConfigurationFile} development\n * The configuration service for a the target type development build.\n ",
      "start": 3310,
      "end": 3601,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 141,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurations\n * @property {WebpackConfigurationsByEnvironment} node\n * The build types configurations for a Node target.\n * @property {WebpackConfigurationsByEnvironment} browser\n * The build types configurations for a browser target.\n ",
      "start": 3603,
      "end": 3875,
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationTargetOutput\n * @property {string} js\n * The filename format and path for the bundle, on the distribution directory.\n * @property {string} css\n * The filename format and path for the generated stylesheet, on the distribution directory.\n * @property {string} images\n * The filename format and path for the images that are going to be copied to the distribution\n * directory.\n * @property {string} fonts\n * The filename format and path for the font files that are going to be copied to the distribution\n * directory.\n ",
      "start": 3877,
      "end": 4440,
      "loc": {
        "start": {
          "line": 151,
          "column": 0
        },
        "end": {
          "line": 163,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackPluginInfo\n * @property {string} name          The name of the plugin.\n * @property {string} configuration The path to the `webpack.config.js` file.\n * @property {Array}  external      The list of subpaths the plugin exposes and that should be\n *                                  handled as external dependencies, in order to avoid bundling\n *                                  them.\n ",
      "start": 4442,
      "end": 4860,
      "loc": {
        "start": {
          "line": 165,
          "column": 0
        },
        "end": {
          "line": 172,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationParams\n * @property {Target} target\n * The target information.\n * @property {TargetFileRules} targetRules\n * The rules to find the different file types a target may use.\n * @property {Object} entry\n * A dictionary with the `entry` setting for a webpack configuration, generated with the target\n * information.\n * @property {WebpackConfigurationTargetOutput} output\n * A dictionary with the filenames formats and paths of the different files the bundle can\n * generate.\n * @property {Object} definitions\n * A dictionary of defined variables that will be replaced on the bundled code.\n * @property {string} buildType\n * The intended built type: `development` or `production`.\n ",
      "start": 4862,
      "end": 5584,
      "loc": {
        "start": {
          "line": 174,
          "column": 0
        },
        "end": {
          "line": 190,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerSSLSettings\n * @property {string} key\n * The path to the SSL key (`.key`).\n * @property {string} cert\n * The path to the SSL certificate (`.crt`).\n * @property {string} ca\n * The path to the SSL public file (`.pem`).\n ",
      "start": 5586,
      "end": 5846,
      "loc": {
        "start": {
          "line": 192,
          "column": 0
        },
        "end": {
          "line": 200,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerProxiedSettings\n * @property {boolean} enabled\n * Whether or not the dev server is being proxied.\n * @property {string} host\n * The host used to proxy the dev server.\n * @property {boolean} https\n * Whether or not the proxied host uses `https`.\n ",
      "start": 5848,
      "end": 6136,
      "loc": {
        "start": {
          "line": 202,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerSettings\n * @property {number} port\n * The server port.\n * @property {string} host\n * The dev server hostname.\n * @property {string} url\n * The complete URL for the dev server.\n * @property {boolean} reload\n * Whether or not to reload the server when the code changes.\n * @property {?TargetDevServerSSLSettings} ssl\n * The paths to the files to enable SSL on the dev server.\n * @property {?TargetDevServerProxiedSettings} [proxied]\n * When the dev server is being proxied (using `nginx` for example), there are certain\n * functionalities, like hot module replacement and live reload, that need to be aware of this.\n ",
      "start": 6138,
      "end": 6796,
      "loc": {
        "start": {
          "line": 212,
          "column": 0
        },
        "end": {
          "line": 227,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} ProviderRegisterMethod\n * @param {Jimple} app\n * A reference to the dependency injection container.\n ",
      "start": 6798,
      "end": 6928,
      "loc": {
        "start": {
          "line": 229,
          "column": 0
        },
        "end": {
          "line": 233,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Provider\n * @property {ProviderRegisterMethod} register\n * The method that gets called when registering the provider.\n ",
      "start": 6930,
      "end": 7076,
      "loc": {
        "start": {
          "line": 235,
          "column": 0
        },
        "end": {
          "line": 239,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ProjextWebpackBundleRunnerOptions\n * @property {?string} entry  The name of the webpack entry to execute. If not specified will\n *                            fallback to the first one on the list provided by webpack.\n * @property {?string} name   The _\"instance name\"_, used to register the listeners on the webpack\n *                            event hooks.\n *                            Its default value is `projext-webpack-plugin-bundle-runner`.\n * @property {?Logger} logger A custom logger to output the plugin's information messages.\n ",
      "start": 7078,
      "end": 7647,
      "loc": {
        "start": {
          "line": 241,
          "column": 0
        },
        "end": {
          "line": 249,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ProjextWebpackOpenDevServerOptions\n * @property {boolean} openBrowser Whether or not to open the browser when the bundle is ready.\n *                                 Its default value is `true`.\n * @property {?string} name        The _\"instance name\"_, used to register the listeners on the\n *                                 webpack event hooks.\n *                                 Its default value is `projext-webpack-plugin-open-dev-server`.\n * @property {?Logger} logger      A custom logger to output the plugin's information messages.\n ",
      "start": 7649,
      "end": 8218,
      "loc": {
        "start": {
          "line": 251,
          "column": 0
        },
        "end": {
          "line": 259,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Jimple}\n * https://yarnpkg.com/en/package/jimple\n ",
      "start": 0,
      "end": 70,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Jimpex}\n * https://yarnpkg.com/en/package/jimpex\n ",
      "start": 72,
      "end": 142,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Express}\n * https://expressjs.com\n ",
      "start": 144,
      "end": 199,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {FileSystem}\n * https://nodejs.org/api/fs.html\n ",
      "start": 201,
      "end": 268,
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {PathUtils}\n * https://homer0.github.io/wootils/class/wootils/node/pathUtils.js~PathUtils.html\n ",
      "start": 270,
      "end": 385,
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Logger}\n * https://homer0.github.io/wootils/class/wootils/node/logger.js~Logger.html\n ",
      "start": 387,
      "end": 493,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EnvironmentUtils}\n * https://homer0.github.io/wootils/class/wootils/node/environmentUtils.js~EnvironmentUtils.html\n ",
      "start": 495,
      "end": 631,
      "loc": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ErrorHandler}\n * https://homer0.github.io/wootils/class/wootils/node/errorHandler.js~ErrorHandler.html\n ",
      "start": 633,
      "end": 757,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {RootRequire}\n * https://homer0.github.io/wootils/function/index.html#static-function-rootRequire\n ",
      "start": 759,
      "end": 877,
      "loc": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Projext}\n * https://homer0.github.io/projext/class/src/app/index.js~Projext.html\n ",
      "start": 879,
      "end": 981,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 49,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {BuildVersion}\n * https://homer0.github.io/projext/class/src/services/building/buildVersion.js~BuildVersion.html\n ",
      "start": 983,
      "end": 1116,
      "loc": {
        "start": {
          "line": 51,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Events}\n * https://homer0.github.io/projext/class/src/services/common/events.js~Events.html\n ",
      "start": 1118,
      "end": 1231,
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Targets}\n * https://homer0.github.io/projext/class/src/services/targets/targets.js~Targets.html\n ",
      "start": 1233,
      "end": 1350,
      "loc": {
        "start": {
          "line": 61,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetsFileRules}\n * https://homer0.github.io/projext/class/src/services/targets/targetsFileRules/targetsFileRules.js~TargetsFileRules.html\n ",
      "start": 1352,
      "end": 1513,
      "loc": {
        "start": {
          "line": 66,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetFileRules}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetFileRules\n ",
      "start": 1515,
      "end": 1639,
      "loc": {
        "start": {
          "line": 71,
          "column": 0
        },
        "end": {
          "line": 74,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetsHTML}\n * https://homer0.github.io/projext/class/src/services/targets/targetsHTML.js~TargetsHTML.html\n ",
      "start": 1641,
      "end": 1770,
      "loc": {
        "start": {
          "line": 76,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Target}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-Target\n ",
      "start": 1772,
      "end": 1878,
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 84,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TargetConfigurationCreator}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-TargetConfigurationCreator\n ",
      "start": 1880,
      "end": 2026,
      "loc": {
        "start": {
          "line": 86,
          "column": 0
        },
        "end": {
          "line": 89,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ProjectConfigurationSettings}\n * https://homer0.github.io/projext/typedef/index.html#static-typedef-ProjectConfigurationSettings\n ",
      "start": 2028,
      "end": 2178,
      "loc": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {BabelConfiguration}\n * https://homer0.github.io/projext/class/src/services/configurations/babelConfiguration.js~BabelConfiguration.html\n ",
      "start": 2180,
      "end": 2337,
      "loc": {
        "start": {
          "line": 96,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {Middleware}\n * http://expressjs.com/en/guide/using-middleware.html\n ",
      "start": 2339,
      "end": 2427,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {ChildProcess}\n * https://nodejs.org/api/child_process.html#child_process_class_childprocess\n * @ignore\n ",
      "start": 2429,
      "end": 2553,
      "loc": {
        "start": {
          "line": 106,
          "column": 0
        },
        "end": {
          "line": 110,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} DevMiddlewareGetDirectory\n * @return {string}\n * The build directory of the target implementing the dev middleware.\n ",
      "start": 2555,
      "end": 2701,
      "loc": {
        "start": {
          "line": 112,
          "column": 0
        },
        "end": {
          "line": 116,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} DevMiddlewareGetFileSystem\n * @return {Promise<FileSystem,Error>}\n * The reason this is resolved on a promise is to avoid trying to accessing files before they are\n * generated.\n ",
      "start": 2703,
      "end": 2911,
      "loc": {
        "start": {
          "line": 118,
          "column": 0
        },
        "end": {
          "line": 123,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} MiddlewaresInformation\n * @property {Array} middlewares\n * A list of functions that when executed return a Node middleware.\n * @property {DevMiddlewareGetDirectory} getDirectory\n * To access the target implementing the middleware build directory.\n * @property {DevMiddlewareGetFileSystem} getFileSystem\n * To access the webpack dev middleware _\"virtual filesystem\"_.\n ",
      "start": 2913,
      "end": 3308,
      "loc": {
        "start": {
          "line": 125,
          "column": 0
        },
        "end": {
          "line": 133,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationsByEnvironment\n * @property {ConfigurationFile} production\n * The configuration service for a the target type production build.\n * @property {ConfigurationFile} development\n * The configuration service for a the target type development build.\n ",
      "start": 3310,
      "end": 3601,
      "loc": {
        "start": {
          "line": 135,
          "column": 0
        },
        "end": {
          "line": 141,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurations\n * @property {WebpackConfigurationsByEnvironment} node\n * The build types configurations for a Node target.\n * @property {WebpackConfigurationsByEnvironment} browser\n * The build types configurations for a browser target.\n ",
      "start": 3603,
      "end": 3875,
      "loc": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 149,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationTargetOutput\n * @property {string} js\n * The filename format and path for the bundle, on the distribution directory.\n * @property {string} css\n * The filename format and path for the generated stylesheet, on the distribution directory.\n * @property {string} images\n * The filename format and path for the images that are going to be copied to the distribution\n * directory.\n * @property {string} fonts\n * The filename format and path for the font files that are going to be copied to the distribution\n * directory.\n ",
      "start": 3877,
      "end": 4440,
      "loc": {
        "start": {
          "line": 151,
          "column": 0
        },
        "end": {
          "line": 163,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackPluginInfo\n * @property {string} name          The name of the plugin.\n * @property {string} configuration The path to the `webpack.config.js` file.\n * @property {Array}  external      The list of subpaths the plugin exposes and that should be\n *                                  handled as external dependencies, in order to avoid bundling\n *                                  them.\n ",
      "start": 4442,
      "end": 4860,
      "loc": {
        "start": {
          "line": 165,
          "column": 0
        },
        "end": {
          "line": 172,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} WebpackConfigurationParams\n * @property {Target} target\n * The target information.\n * @property {TargetFileRules} targetRules\n * The rules to find the different file types a target may use.\n * @property {Object} entry\n * A dictionary with the `entry` setting for a webpack configuration, generated with the target\n * information.\n * @property {WebpackConfigurationTargetOutput} output\n * A dictionary with the filenames formats and paths of the different files the bundle can\n * generate.\n * @property {Object} definitions\n * A dictionary of defined variables that will be replaced on the bundled code.\n * @property {string} buildType\n * The intended built type: `development` or `production`.\n ",
      "start": 4862,
      "end": 5584,
      "loc": {
        "start": {
          "line": 174,
          "column": 0
        },
        "end": {
          "line": 190,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerSSLSettings\n * @property {string} key\n * The path to the SSL key (`.key`).\n * @property {string} cert\n * The path to the SSL certificate (`.crt`).\n * @property {string} ca\n * The path to the SSL public file (`.pem`).\n ",
      "start": 5586,
      "end": 5846,
      "loc": {
        "start": {
          "line": 192,
          "column": 0
        },
        "end": {
          "line": 200,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerProxiedSettings\n * @property {boolean} enabled\n * Whether or not the dev server is being proxied.\n * @property {string} host\n * The host used to proxy the dev server.\n * @property {boolean} https\n * Whether or not the proxied host uses `https`.\n ",
      "start": 5848,
      "end": 6136,
      "loc": {
        "start": {
          "line": 202,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} TargetDevServerSettings\n * @property {number} port\n * The server port.\n * @property {string} host\n * The dev server hostname.\n * @property {string} url\n * The complete URL for the dev server.\n * @property {boolean} reload\n * Whether or not to reload the server when the code changes.\n * @property {?TargetDevServerSSLSettings} ssl\n * The paths to the files to enable SSL on the dev server.\n * @property {?TargetDevServerProxiedSettings} [proxied]\n * When the dev server is being proxied (using `nginx` for example), there are certain\n * functionalities, like hot module replacement and live reload, that need to be aware of this.\n ",
      "start": 6138,
      "end": 6796,
      "loc": {
        "start": {
          "line": 212,
          "column": 0
        },
        "end": {
          "line": 227,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {function} ProviderRegisterMethod\n * @param {Jimple} app\n * A reference to the dependency injection container.\n ",
      "start": 6798,
      "end": 6928,
      "loc": {
        "start": {
          "line": 229,
          "column": 0
        },
        "end": {
          "line": 233,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} Provider\n * @property {ProviderRegisterMethod} register\n * The method that gets called when registering the provider.\n ",
      "start": 6930,
      "end": 7076,
      "loc": {
        "start": {
          "line": 235,
          "column": 0
        },
        "end": {
          "line": 239,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ProjextWebpackBundleRunnerOptions\n * @property {?string} entry  The name of the webpack entry to execute. If not specified will\n *                            fallback to the first one on the list provided by webpack.\n * @property {?string} name   The _\"instance name\"_, used to register the listeners on the webpack\n *                            event hooks.\n *                            Its default value is `projext-webpack-plugin-bundle-runner`.\n * @property {?Logger} logger A custom logger to output the plugin's information messages.\n ",
      "start": 7078,
      "end": 7647,
      "loc": {
        "start": {
          "line": 241,
          "column": 0
        },
        "end": {
          "line": 249,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {Object} ProjextWebpackOpenDevServerOptions\n * @property {boolean} openBrowser Whether or not to open the browser when the bundle is ready.\n *                                 Its default value is `true`.\n * @property {?string} name        The _\"instance name\"_, used to register the listeners on the\n *                                 webpack event hooks.\n *                                 Its default value is `projext-webpack-plugin-open-dev-server`.\n * @property {?Logger} logger      A custom logger to output the plugin's information messages.\n ",
      "start": 7649,
      "end": 8218,
      "loc": {
        "start": {
          "line": 251,
          "column": 0
        },
        "end": {
          "line": 259,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8219,
      "end": 8219,
      "loc": {
        "start": {
          "line": 260,
          "column": 0
        },
        "end": {
          "line": 260,
          "column": 0
        }
      }
    }
  ]
}